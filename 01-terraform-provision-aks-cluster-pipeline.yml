
trigger:
- master

pool:
  vmImage: ubuntu-latest

# Stage-1: Terraform Validate Stage
stages:
  - stage: TerraformValidate
    jobs: 
      - job: TerraformValidateJob
        continueOnError: false
## Step-1
        steps:
### Task 1: Publish Artifacts to Pipeline (Pipeline artifacts provide a way to share files between stages in a pipeline or between different pipelines. )
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)/terraform-manifests'
              artifact: 'terraform-manifests-artifact'
              publishLocation: 'pipeline'      
### Task 2: Install Latest Terraform (0.13.5) (Ideally not needed if we use default Ubuntu Agents)
          - task: TerraformInstaller@0
            displayName: Terraform Install
            inputs:
              terraformVersion: 'latest'
## Task-3: Validate Terraform Manifests (terraform init)
          - task: TerraformCLI@0
            inputs:
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'
              backendType: 'azurerm'
              backendServiceArm: 'terraform-aks-azurerm-svc-con'
              backendAzureRmResourceGroupName: 'terraform-storage-rg'
              backendAzureRmStorageAccountName: 'terraformstateshotokann'
              backendAzureRmContainerName: 'tfstatefiles'
              backendAzureRmKey: 'aks-base.tfstate'
              allowTelemetryCollection: false
## Task-4: Validate Terraform Manifests (terraform validate)
          - task: TerraformCLI@0
            displayName: Terraform Validate
            inputs:
              command: 'validate'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'
              allowTelemetryCollection: true